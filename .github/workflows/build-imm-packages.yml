name: Build ImmortalWrt Packages

on:
  workflow_dispatch:
  push:
    branches:
      - imm-packages

env:
  IMM_VER: 23.05.0-rc3
  N2N_REPO_BRANCH: 3.1.1
  GCC_VERSION: 12.3.0
  ARCH_MT7981B: mediatek-filogic
  PATH_MT7981B: mediatek/filogic

jobs:
  build_packages:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main
    - id: commit
      uses: pr-mpt/actions-commit-hash@v2
    - name: Check commit ids
      run: |
        echo "SHORT COMMIT ID:" ${{ steps.commit.outputs.short }}
    - name: Clone source code
      run: |
        df -hT $PWD
        git clone -b ${{ env.N2N_REPO_BRANCH }} --depth=1 https://github.com/ntop/n2n.git
    - name: Download sdk
      env:
        DIR_SDK_MT7981B: immortalwrt-sdk-${{ env.IMM_VER }}-${{ env.ARCH_MT7981B }}_gcc-${{ env.GCC_VERSION }}_musl.Linux-x86_64
      run: |
        df -hT $PWD
        wget -q https://downloads.immortalwrt.org/releases/${{ env.IMM_VER }}/targets/${{ env.PATH_MT7981B }}/${{ env.DIR_SDK_MT7981B }}.tar.xz
        tar -xf ${{ env.DIR_SDK_MT7981B }}.tar.xz
        ln -sf $PWD/n2n/packages/openwrt $PWD/${{ env.DIR_SDK_MT7981B }}/package/n2n
        ls -al
    - name: Build ipk
      env:
        DIR_SDK_MT7981B: immortalwrt-sdk-${{ env.IMM_VER }}-${{ env.ARCH_MT7981B }}_gcc-${{ env.GCC_VERSION }}_musl.Linux-x86_64
      run: |
        cd ${{ env.DIR_SDK_MT7981B }}
        make defconfig
        make package/n2n/compile V=s -j$(nproc)
        cp $(find . -name n2n-edge_*.ipk) ../n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_MT7981B }}_${{ env.IMM_VER }}_${{ steps.commit.outputs.short }}.ipk
        cd ..
        echo ===============================
    - name: Create Release
      id: create_release
      uses: actions/create-release@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: package_${{ env.IMM_VER }}_${{ steps.commit.outputs.short }}
        release_name: package_${{ env.IMM_VER }}_${{ steps.commit.outputs.short }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_MT7981B }}_${{ env.IMM_VER }}_${{ steps.commit.outputs.short }}.ipk
        asset_name: n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_MT7981B }}_${{ env.IMM_VER }}_${{ steps.commit.outputs.short }}.ipk
        asset_content_type: application/ipk
