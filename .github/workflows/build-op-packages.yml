name: Build OP Packages

on:
  workflow_dispatch:
  push:
    branches:
      - op-packages

env:
  OP_VER: 22.03.2
  N2N_REPO_BRANCH: 3.1.1
  GCC_VERSION: 11.2.0
  ARCH_MT7620: ramips-mt7620
  ARCH_MT7621: ramips-mt7621
  ARCH_ATH79:  ath79-tiny

jobs:
  build_packages:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main
    - id: commit
      uses: pr-mpt/actions-commit-hash@v2
    - name: Check commit ids
      run: |
        echo "SHORT COMMIT ID:" ${{ steps.commit.outputs.short }}
    - name: Clone source code
      run: |
        df -hT $PWD
        git clone -b ${{ env.N2N_REPO_BRANCH }} --depth=1 https://github.com/VergLsm/n2n.git
        # git clone --depth=1 https://github.com/coolsnowwolf/lede.git
        # git clone --depth=1 https://github.com/MeIsReallyBa/k2p-openwrt-mt7615_5.0.2.0.git
    - name: Download sdk
      env:
        DIR_SDK_MT7620: openwrt-sdk-${{ env.OP_VER }}-${{ env.ARCH_MT7620 }}_gcc-${{ env.GCC_VERSION }}_musl.Linux-x86_64
        DIR_SDK_MT7621: openwrt-sdk-${{ env.OP_VER }}-${{ env.ARCH_MT7621 }}_gcc-${{ env.GCC_VERSION }}_musl.Linux-x86_64
        DIR_SDK_ATH79:  openwrt-sdk-${{ env.OP_VER }}-${{ env.ARCH_ATH79 }}_gcc-${{ env.GCC_VERSION }}_musl.Linux-x86_64
      run: |
        df -hT $PWD
        wget -q https://downloads.openwrt.org/releases/${{ env.OP_VER }}/targets/ramips/mt7620/$DIR_SDK_MT7620.tar.xz
        tar -xf ${{ env.DIR_SDK_MT7620 }}.tar.xz
        ln -sf $PWD/n2n/packages/openwrt $PWD/${{ env.DIR_SDK_MT7620 }}/package/n2n
        wget -q https://downloads.openwrt.org/releases/${{ env.OP_VER }}/targets/ramips/mt7621/$DIR_SDK_MT7621.tar.xz
        tar -xf ${{ env.DIR_SDK_MT7621 }}.tar.xz
        ln -sf $PWD/n2n/packages/openwrt $PWD/${{ env.DIR_SDK_MT7621 }}/package/n2n
        wget -q https://downloads.openwrt.org/releases/${{ env.OP_VER }}/targets/ath79/tiny/$DIR_SDK_ATH79.tar.xz
        tar -xf ${{ env.DIR_SDK_ATH79 }}.tar.xz
        ln -sf $PWD/n2n/packages/openwrt $PWD/${{ env.DIR_SDK_ATH79 }}/package/n2n
        ls -al
    - name: Build ipk
      env:
        DIR_SDK_MT7620: openwrt-sdk-${{ env.OP_VER }}-${{ env.ARCH_MT7620 }}_gcc-${{ env.GCC_VERSION }}_musl.Linux-x86_64
        DIR_SDK_MT7621: openwrt-sdk-${{ env.OP_VER }}-${{ env.ARCH_MT7621 }}_gcc-${{ env.GCC_VERSION }}_musl.Linux-x86_64
        DIR_SDK_ATH79:  openwrt-sdk-${{ env.OP_VER }}-${{ env.ARCH_ATH79 }}_gcc-${{ env.GCC_VERSION }}_musl.Linux-x86_64
      run: |
        cd ${{ env.DIR_SDK_MT7620 }}
        make defconfig
        make package/n2n/compile V=s -j$(nproc)
        cp $(find . -name n2n-edge_*.ipk) ../n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_MT7620 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        cd ..
        echo ===============================
        cd ${{ env.DIR_SDK_MT7621 }}
        # # ln -s ../../lede/package/lean/mt package/
        # ln -s ../../k2p-openwrt-mt7615_5.0.2.0/mtk package/
        # ./scripts/feeds update luci
        ./scripts/feeds update -a
        # cp ../diffconfig_k2p .config
        make defconfig
        # # make package/luci-app-mtwifi/compile V=s -j$(nproc)
        # make package/mtk-luci-plugin/compile V=s -j$(nproc)
        # make package/mt_wifi/compile V=s -j$(nproc)
        # # cp $(find bin -name luci-app-mtwifi*.ipk) ../luci-app-mtwifi_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        # # cp $(find bin -name mt_wifi*.ipk) ../mt_wifi_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        # cp $(find bin -name mtk-luci-plugin*.ipk) ../mtk-luci-plugin_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        # cp $(find bin -name wifi-l1profile*.ipk) ../wifi-l1profile_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        # cp $(find bin -name kmod-mt_wifi*.ipk) ../kmod-mt_wifi_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        make package/n2n/compile V=s -j$(nproc)
        cp $(find . -name n2n-edge_*.ipk) ../n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        cd ..
        echo ===============================
        cd ${{ env.DIR_SDK_ATH79 }}
        make defconfig
        make package/n2n/compile V=s -j$(nproc)
        cp $(find . -name n2n-edge_*.ipk) ../n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_ATH79 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        cd ..
    - name: Create Release
      id: create_release
      uses: actions/create-release@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: package_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}
        release_name: package_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_MT7620 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        asset_name: n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_MT7620 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        asset_content_type: application/ipk
    - name: Upload Release Asset
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        asset_name: n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        asset_content_type: application/ipk
    - name: Upload Release Asset
      uses: actions/upload-release-asset@main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_ATH79 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        asset_name: n2n-edge_${{ env.N2N_REPO_BRANCH }}_${{ env.ARCH_ATH79 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
        asset_content_type: application/ipk
    # - name: Upload Release Asset
    #   uses: actions/upload-release-asset@main
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #     asset_path: mtk-luci-plugin_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
    #     asset_name: mtk-luci-plugin_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
    #     asset_content_type: application/ipk
    # - name: Upload Release Asset
    #   uses: actions/upload-release-asset@main
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #     asset_path: wifi-l1profile_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
    #     asset_name: wifi-l1profile_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
    #     asset_content_type: application/ipk
    # - name: Upload Release Asset
    #   uses: actions/upload-release-asset@main
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #     asset_path: kmod-mt_wifi_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
    #     asset_name: kmod-mt_wifi_${{ env.ARCH_MT7621 }}_${{ env.OP_VER }}_${{ steps.commit.outputs.short }}.ipk
    #     asset_content_type: application/ipk